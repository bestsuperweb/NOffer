//= require_tree .
$(function() { 
	
	$('.color').colorpicker();
	$('#timepicker1').timepicker({
		minuteStep: 1,
		template: 'modal',
		appendWidgetTo: 'body',
		showSeconds: true,
		showMeridian: false,
		defaultTime: false
	});
	$('#copyScript').on('click', function(){
		$('#result textarea').copyme();
	});
	
	// NOTE: $.tablesorter.theme.bootstrap is ALREADY INCLUDED in the jquery.tablesorter.widgets.js
	// file; it is included here to show how you can modify the default classes
	$.tablesorter.themes.bootstrap = {
		// these classes are added to the table. To see other table classes available,
		// look here: http://getbootstrap.com/css/#tables
		table        : 'table table-bordered table-striped',
		caption      : 'caption',
		// header class names
		header       : 'bootstrap-header', // give the header a gradient background (theme.bootstrap_2.css)
		sortNone     : '',
		sortAsc      : '',
		sortDesc     : '',
		active       : '', // applied when column is sorted
		hover        : '', // custom css required - a defined bootstrap style may not override other classes
		// icon class names
		icons        : '', // add "icon-white" to make them white; this icon class is added to the <i> in the header
		iconSortNone : 'bootstrap-icon-unsorted', // class name added to icon when column is not sorted
		iconSortAsc  : 'glyphicon glyphicon-chevron-up', // class name added to icon when column has ascending sort
		iconSortDesc : 'glyphicon glyphicon-chevron-down', // class name added to icon when column has descending sort
		filterRow    : '', // filter row class; use widgetOptions.filter_cssFilter for the input/select element
		footerRow    : '',
		footerCells  : '',
		even         : '', // even row zebra striping
		odd          : ''  // odd row zebra striping
	};

  // call the tablesorter plugin and apply the uitheme widget
  $("#order-table").tablesorter({
	    // this will apply the bootstrap theme if "uitheme" widget is included
	    // the widgetOptions.uitheme is no longer required to be set
	    theme : "bootstrap",

	    widthFixed: true,

	    headerTemplate : '{content} {icon}', // new in v2.7. Needed to add the bootstrap icon!

	    // widget code contained in the jquery.tablesorter.widgets.js file
	    // use the zebra stripe widget if you plan on hiding any rows (filter widget)
	    widgets : [ "uitheme", "filter", "columns", "zebra" ],

	    widgetOptions : {
	      // using the default zebra striping class name, so it actually isn't included in the theme variable above
	      // this is ONLY needed for bootstrap theming if you are using the filter widget, because rows are hidden
	      zebra : ["even", "odd"],

	      // class names added to columns when sorted
	      columns: [ "primary", "secondary", "tertiary" ],

	      // reset filters button
	      filter_reset : ".reset",

	      // extra css class name (string or array) added to the filter element (input or select)
	      filter_cssFilter: "form-control",

	      // set the uitheme widget to use the bootstrap theme class names
	      // this is no longer required, if theme is set
	      // ,uitheme : "bootstrap"

	  }
	})
	  .tablesorterPager({

	    // target the pager markup - see the HTML block below
	    container: $(".ts-pager"),

	    // target the pager page select dropdown - choose a page
	    cssGoto  : ".pagenum",

	    // remove rows from the table to speed up the sort of large tables.
	    // setting this to false, only hides the non-visible rows; needed if you plan to add/remove rows with the pager enabled.
	    removeRows: false,

	    // output string - default is '{page}/{totalPages}';
	    // possible variables: {page}, {totalPages}, {filteredPages}, {startRow}, {endRow}, {filteredRows} and {totalRows}
	    output: '{startRow} - {endRow} / {filteredRows} ({totalRows})'

	});


});


var app = angular.module('myApp', []);

app.controller('myCtrl', function($scope, $http) {

	$scope.setLink 		= function(){	    	
		$scope.btn_link = $scope.shopUrl + "/products/" + $scope.product.split(':::')[1];
	};

	$scope.setDistype 	= function(event){
		var target = $( event.currentTarget );
		target.closest('.bs-dropdown-to-select-group')
		.children('.dropdown-toggle').dropdown('toggle');
		
		$scope.discount_type = target.children('a').html();
	};

	$scope.generateScript = function(){

		$('#btn-save').html('<b><span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span> Saving...</b>');
		
		var dataObj = {
			option 		: $scope.option,
			main_text 	: $scope.main_text,
			txt_color 	: $scope.txt_color,
			time_left 	: $scope.time_left,
			main_font 	: $scope.main_font,
			font_size 	: $scope.font_size,
			timer_color : $scope.timer_color,
			timer_font 	: $scope.timer_font,			
			timer_text	: $scope.timer_txt,
			timer_size	: $scope.timer_size,
			btn_link 	: $scope.btn_link,
			btn_color 	: $scope.btn_color,			
			main_color 	: $scope.main_color,
			btn_txt 	: $scope.btn_text,
			btn_font 	: $scope.btn_font,
			bg_color 	: $scope.bg_color,
			bd_color	: $scope.bd_color,
			percentage	: $scope.percentage,
			distype 	: $scope.discount_type,
			use_code	: $scope.use_code,
			product 	: $scope.product,
			product1 	: $scope.product1,
			product2 	: $scope.product2,
			animation	: $scope.animation,
			main_title	: $scope.main_title,
			main_t_color: $scope.main_title_color,
			main_t_size	: $scope.main_title_size,
			main_t_font	: $scope.main_title_font,
			ribbon_text	: $scope.ribbon_text,
			ribbon_color: $scope.ribbon_color,
			rt_color	: $scope.ribbon_text_color,
			ribbon_font	: $scope.ribbon_font,
			badge_size	: $scope.badge_size,
			badge_font	: $scope.badge_font,
			badge_color	: $scope.badge_color,
			bt_color	: $scope.badge_text_color,
			corner_color: $scope.corner_color,
			pb_txt		: $scope.pb_txt, 
			pb_color	: $scope.pbcolor,
			pb_bg_color	: $scope.pb_bg_color,
			pb_font		: $scope.pb_font,
			pb_mb_pos	: $scope.pb_mb_pos,
			pb_desk_pos	: $scope.pb_desk_pos
		};

		var req = {
			method: 'post',
			data: dataObj,
			url: '<%= Rails.application.routes.url_helpers.generate_script_path %>'
		};

		$http(req).then(function mySucces(response) {
			if (response.data.status == 'success') {
				$('#result textarea').val(response.data.result);
				$('#result').show();
				$scope.result = response.data.status;
				$('#resultModal').modal("show");
				$('#btn-save').html('<b>Save</b>');
			}else{
				alert(response.data.result);
				$('#btn-save').html('<b>Save</b>');
			}
		}, function myError(response) {
		        // $scope.myWelcome = response.statusText;
		        alert(response);
		    });
	};	    

});
